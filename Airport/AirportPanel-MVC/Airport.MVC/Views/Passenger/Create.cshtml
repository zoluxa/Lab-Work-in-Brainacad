@model Airport.MVC.Models.PassengerModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PassengerModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.FlightId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @* @Html.DropDownList("FlightId", "Value")*@
                    @Html.DropDownListFor(model => model.FlightId, (IEnumerable<SelectListItem>)ViewData["FlightId"], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FlightId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.FlightNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FlightNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FlightNumber, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Passport, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Passport, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passport, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.DateOfBirthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirthday, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirthday, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Sex, (IEnumerable<SelectListItem>)ViewData["Sex"], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.PlaceClass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PlaceClass, (IEnumerable<SelectListItem>)ViewData["PlaceClass"], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlaceClass, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/bootstrap-datepicker.min.js"></script>*@
  @*<link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" />*@
  
<script src="~/Scripts/SiteScript.js"></script>
}
